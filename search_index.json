[
["data-science-toolbox.html", " 2 Data Science Toolbox", " 2 Data Science Toolbox The Data Science Toolbox provides a basic foundation in creating a work environment as a data scientist. This environment is based on the R language. It is an environment for statistical computing, graphics and so much more. It is similar to the S language developed at Bell Laboratories by John Chambers and his team (The R Foundation 2020). R language is created by Ross Ihaka and Robert Gentleman at the University of Auckland, New Zealand and is developed by the R Development Core Team. Thus, R is named after the first initials of the co-creators Ross &amp; Robert (Wikipedia 2019). References "],
["more-than-a-statistical-language.html", "2.1 More Than a Statistical Language", " 2.1 More Than a Statistical Language R language is use in many industries such as research in academia, pharmaceutical for clinical trials, finance for risk management, social media for natural language processing and sentiment analysis, manufacturing for predicting demand and market trends and many more. Below is an example of a reproducible expression in building a simple metric stock analysis in R combined with shiny. We will look into NIO and SPY with a starting date of Jun 01, 2020. # We will use all libraries through out this chapter library(plotly) library(tidyquant) library(ggplot2) library(dplyr) library(dygraphs) library(echarts4r) library(timetk) library(glue) library(tidyr) # You can change to whatever ticker you want ticker &lt;- c(&quot;NIO&quot;, &quot;SPY&quot;) # tidyquant package for tidy format StockData &lt;- tq_get(ticker, from = &quot;2019-01-01&quot;) # table format StockData[1:6,] %&gt;% kable(caption = &#39;NIO vs. SPY&#39;) %&gt;% kable_styling() Table 2.1: NIO vs. SPY symbol date open high low close volume adjusted NIO 2019-01-02 6.13 6.24 6.00 6.20 8823600 6.20 NIO 2019-01-03 6.10 6.15 6.02 6.05 7562900 6.05 NIO 2019-01-04 6.19 6.40 6.13 6.36 9405600 6.36 NIO 2019-01-07 6.41 6.59 6.31 6.50 9709000 6.50 NIO 2019-01-08 6.57 6.58 6.17 6.40 9603800 6.40 NIO 2019-01-09 6.41 6.69 6.35 6.63 11489900 6.63 See below for time series chart of NIO’s daily closing price. NIOData &lt;- StockData %&gt;% filter(symbol==&quot;NIO&quot;) NIOData$date &lt;- factor(NIOData$date) NIOData %&gt;% e_charts(date) %&gt;% e_candle(open,close, low, high, name= &quot;NIO&quot;) %&gt;% e_axis_labels(y=&quot;Price&quot;, x=&quot;Date&quot;) %&gt;% e_datazoom(type=&quot;slider&quot;) %&gt;% e_title(&quot;NIO Price History&quot;) %&gt;% e_tooltip(&quot;axis&quot;) Figure 2.1: NIO Price Imagine communicating these data points to your client without any visual aids. It would take forever. Visualization is a powerful tool, that provides a better understanding of our huge data sets. Figure 2.1, with just a quick glance we can see the x axis as “Date” with a range of Jan 01, 2019 to Aug 04, 2020, y axis as “Price” with a range of 0-18 and ticker symbol NIO. Candlestick charting tells us close, open, low , and high price of the stock on a specific date. We can also use the slider to zoom in on a specific dates. Visualization amplifies messages and at the same time simplifies communication to an audience. Visualization provides an insight to make better decision. Figure 2.4 and 2.5 shows a bi-modal distribution. There are two groups of traders in these charts. The first group bought and sold at around 7 and the other one at 13. There are many variables that we do not see in these two charts such as date and time, current news, trade environment and many more which falls under standard error. The goal is to minimize the se. Lets create another chart comparing the movement of NIO and SPY and see if there is a relationship by creating an imaginary investment of 100 dollars each on NIO and SPY with a starting date of 01-01-2019. Let’s look at the code # clear everything rm(list = ls()) # ticker symbols ticker &lt;- c(&quot;NIO&quot;, &quot;SPY&quot;) # Grab Data using tidyquant package StockData &lt;- tq_get(ticker, from = &quot;2019-01-01&quot;) # initial investment of 100 NIO &lt;- StockData %&gt;% filter(symbol ==&quot;NIO&quot;) %&gt;% select(symbol, date, close) %&gt;% mutate(init=100*close[[1]], actual = close*100, ratio =round(((actual/init)-1)*100, digits=3)) NIO[1:6,] %&gt;% kable(caption = &quot;NIO $100 Investment&quot;) %&gt;% kable_styling() Table 2.2: NIO $100 Investment symbol date close init actual ratio NIO 2019-01-02 6.20 620 620 0.000 NIO 2019-01-03 6.05 620 605 -2.419 NIO 2019-01-04 6.36 620 636 2.581 NIO 2019-01-07 6.50 620 650 4.839 NIO 2019-01-08 6.40 620 640 3.226 NIO 2019-01-09 6.63 620 663 6.935 SPY &lt;- StockData %&gt;% filter(symbol ==&quot;SPY&quot;) %&gt;% select(symbol, date, close) %&gt;% mutate(init=100*close[[1]], actual = close*100, ratio =round(((actual/init)-1)*100, digits=3)) SPY[1:6,] %&gt;% kable(caption = &quot;SPY $100 Investment&quot;) %&gt;% kable_styling() Table 2.3: SPY $100 Investment symbol date close init actual ratio SPY 2019-01-02 250.18 25018 25018 0.000 SPY 2019-01-03 244.21 25018 24421 -2.386 SPY 2019-01-04 252.39 25018 25239 0.883 SPY 2019-01-07 254.38 25018 25438 1.679 SPY 2019-01-08 256.77 25018 25677 2.634 SPY 2019-01-09 257.97 25018 25797 3.114 # Data Wrangling NIO &lt;- NIO %&gt;% filter(symbol == &quot;NIO&quot;) %&gt;% select(symbol, date, ratio) %&gt;% rename(NIO = ratio) SPY &lt;- SPY %&gt;% filter(symbol == &quot;SPY&quot;) %&gt;% select(symbol, date, ratio) %&gt;% rename(SPY = ratio) # Combining data frame StockData &lt;- left_join(NIO, SPY, by=&quot;date&quot;) %&gt;% select(date, NIO, SPY) NIO_h &lt;- StockData %&gt;% filter(NIO &gt; 100) SPy_h &lt;-StockData %&gt;% filter(SPY&gt; 30) ggplot(StockData, aes(x=NIO, y=SPY),color=&quot;grey&quot;)+ geom_point(alpha=.5)+ geom_smooth(method = &quot;lm&quot;)+ labs(title = &quot;Percentage Gain&quot;)+ geom_point(data = NIO_h, aes(x=NIO, y=SPY), color = &quot;red&quot;, alpha = .3)+ geom_point(data = SPy_h, aes(x=NIO, y=SPY), color = &quot;blue&quot;,alpha = .3) ## `geom_smooth()` using formula &#39;y ~ x&#39; Figure 2.2: Beta We can see from figure 2.2 that the blue line is almost horizontal with a slightly positive relationship and close to zero - meaning no relationship. The correlation between NIO and SPY is 0.1841671. StockData$date&lt;-factor(StockData$date) StockData[-1,] %&gt;% e_charts(date) %&gt;% e_line(NIO) %&gt;% e_line(SPY) %&gt;% e_datazoom(type=&quot;slider&quot;) %&gt;% e_title(&quot;NIO vs. SPY&quot;) %&gt;% e_tooltip(&quot;axis&quot;) Figure 2.3: NIO vs. SPY Stock Price distribution # clear everything rm(list = ls()) # ticker symbols ticker &lt;- c(&quot;NIO&quot;, &quot;SPY&quot;) # Grab Data using tidyquant package StockData &lt;- tq_get(ticker, from = &quot;2019-01-01&quot;) # if needed binning function Freedman Diconis Rule [@fd] fd=function(x) { n=length(x) r=IQR(x) 2*r/n^(1/3) } Stock_Dist &lt;- StockData %&gt;% filter(symbol==&quot;NIO&quot;) p2 &lt;- ggplot(Stock_Dist, aes(x=close)) + geom_histogram(aes(y=..density..), color=&quot;black&quot;, fill=&quot;grey&quot;) + geom_density(alpha=.2, fill=&quot;#FF6666&quot;) + labs(x=&quot;NIO&quot;, y=&quot;Frequency&quot;, title = &quot;NIO Price Distribution&quot;) ggplotly(p2) ## `stat_bin()` using `bins = 30`. Pick better ## value with `binwidth`. Figure 2.4: plotly and ggplot2 package Plot using base R graphics hist function. hist(Stock_Dist$close, breaks=30, main = &quot;NIO Price Distribution&quot;, xlab = &quot;Price&quot; ) Figure 2.5: base r visuals Once we combine all of these graphs. We can create a dashboard using Shiny. Click to see. Now, that you’ve seen the power of R. What do you think? "],
["course-layout.html", "2.2 Course Layout", " 2.2 Course Layout The first 2 weeks course discussions are as follows: What is Data Science What is Data What is Data Scientist R installation RStudio installation R packages Third and fourth week discussion as follows: Git and Github Linking Github to RStudio Formulating Data Science questions Experimental Design What is Big Data "],
["what-is-data-science.html", "2.3 What is Data Science?", " 2.3 What is Data Science? Data Science core is using data to answer questions. It is a combination of mathematics, computer science, and domain environment pertaining to the data. The domain environment is the field that the data belongs to for example such as finance, environment, biology, genetics, psychology, etc. library(tidyverse) library(ggforce) ## Data frame - All of the arguments below are required to build the venn diagram. VennDS &lt;- tibble( # Center of each circles x = c(0, 1,-1), y = c(-0.5, 1, 1), # label coordinates if needed tx = NULL, ty = NULL, cat = c(&#39;Variety&#39;, &#39;Velocity&#39;, &#39;Volume&#39;) ) # ggplot argument x0, y0, r are all required, v1 &lt;- ggplot(VennDS, aes( x0 = x, y0 = y, r = 1.5, fill = cat)) + geom_circle(alpha = 0.25, size = 1, color = &quot;transparent&quot;, show.legend = FALSE) + # using geom_text to draw on the graph geom_text(aes(x = -1.5, y = 1, label = &quot;Computer Science&quot;), size = 5) + geom_text(aes(x = 1.5, y = 1, label = &quot;Math &amp; Statistics &quot;), size = 5) + geom_text(aes(x = 1.5, y = .7, label = &quot; Knowledge&quot;), size = 5) + geom_text(aes(x = 0, y = -1, label = &quot;Domain Environment&quot;), size = 5) + geom_text(aes(x = 0, y = .75, label = &quot;Data Science&quot;), size = 5) + geom_text(aes(x = 0 , y = 1.5, label = &quot;Machine&quot;), size = 5) + geom_text(aes(x = 0, y = 1.2, label = &quot;Learning&quot;), size = 5) + geom_text(aes(x = -.9, y = 0, label = &quot;Danger Zone&quot;), size = 5) + geom_text(aes(x = .9, y = .3, label = &quot;Traditional &quot;), size = 5) + geom_text(aes(x = .9, y = 0, label = &quot; Research&quot;), size = 5) + # remove x and y labels theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) v1 Figure 2.6: Data Science Venn Diagram (Conway 2010) The Data Science venn diagram figure (???) shows us the combination of three fields - computer science, math &amp; statistics, and domain environment (i.e. genetics, finance, etc.). The core of Data Science is using the data to answer our question. Generating the right question will help us decide what data to take in and out of our environment. An example of an ineffective question is “What is the sales for company abc?” What about an effective question - “What is the quarterly sales for the last 5 years for company abc? What are the top 10 products in sales/profit/numbers in the last year by month?” Once the question is generated the following are basic routine in R/RStudio: Grabbing the data Data wrangling and making them tidy Exploratory Analysis Reproducible Research Statistical Inference Regression Models Practical Machine Learning Insights References "],
["what-is-data.html", "2.4 What is Data?", " 2.4 What is Data? There are so many data being generated everyday. Take me for example, I’ve sent 5 emails today, reviewed and created trading strategy for next week, check my reddit, stocktwits, webull, and twitter for sentiment analysis, shared several photos to my family, check-out my Tesla app to monitor Solar Panel and battery, and reviewed my nest video monitoring. These are all completed in early morning routine. Data is coming from many forms your typical emails, social media, internet of things like Tesla solar panels/Powerwall connected to the internet and google’s home monitoring Nest. All of these data are a combination of numerical, categorical, and it some cases are often big which falls under binary large objects or “BLOB”. # ggplot argument x0, y0, r are all required, v2 &lt;- ggplot(VennDS, aes( x0 = x, y0 = y, r = 1.5, fill = cat )) + geom_circle(alpha = 0.25, size = 1, color = &quot;transparent&quot;, show.legend = FALSE) + # using geom_text to draw on the graph geom_text(aes(x = -1.5, y = 1, label = &quot;Volume&quot;), size = 5) + geom_text(aes(x = 1.5, y = 1, label = &quot;Velocity&quot;), size = 5) + geom_text(aes(x = 0, y = -1, label = &quot;Variety&quot;), size = 5) + geom_text(aes(x = 0, y = .75, label = &quot;Big Data&quot;), size = 5) + # remove x and y labels theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) v2 Figure 2.7: The Vs of Big Data "],
["what-is-a-data-scientist.html", "2.5 What is a data scientist?", " 2.5 What is a data scientist? “who combines the skills of software programmer, statistician and storyteller slash artist to extractthe nuggets of gold hidden under mountains of data”(The Economist 2010) References "]
]
